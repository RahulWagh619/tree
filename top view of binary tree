class Solution {
  public:
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    vector<int> topView(Node *root) {
        // code here
        vector<int>ans;
        map<int,int>mpp;
        queue<pair<Node*,int>>q;
        if(root==NULL)return ans;
        else{
            q.push({root,0});
        }
        while(!q.empty()){
            int size=q.size();
            for(int i=0;i<size;i++){
              pair<Node*,int>temp=q.front();
              q.pop();
              Node*curr=temp.first;
              int sec=temp.second;
               if (mpp.find(sec) == mpp.end()) {
            mpp[sec] = curr->data; 
        }
              if(curr->left){
                  q.push({curr->left,sec-1});
              }
              if(curr->right){
                  q.push({curr->right,sec+1});
              }
            }
        }
        for (auto it : mpp) {
        ans.push_back(it.second);
    }
        
        return ans;
        
    }
};
